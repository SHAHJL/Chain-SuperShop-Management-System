package com.shah.chainsupershop.domain;
// Generated Jul 20, 2018 9:29:53 AM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="user"
    ,catalog="chain_super_shop"
    , uniqueConstraints = @UniqueConstraint(columnNames="user_name") 
)
public class User  implements java.io.Serializable {


     private Integer userId;
     private UserRole userRole;
     private String firstName;
     private String lastName;
     private Date regDate;
     private String userName;
     private String userPassword;
     private String email;
     private int phone;
     private Set<Vendor> vendors = new HashSet<Vendor>(0);
     private Set<Branch> branches = new HashSet<Branch>(0);

    public User() {
    }

	
    public User(UserRole userRole, String firstName, String lastName, Date regDate, String userPassword, String email, int phone) {
        this.userRole = userRole;
        this.firstName = firstName;
        this.lastName = lastName;
        this.regDate = regDate;
        this.userPassword = userPassword;
        this.email = email;
        this.phone = phone;
    }
    public User(UserRole userRole, String firstName, String lastName, Date regDate, String userName, String userPassword, String email, int phone, Set<Vendor> vendors, Set<Branch> branches) {
       this.userRole = userRole;
       this.firstName = firstName;
       this.lastName = lastName;
       this.regDate = regDate;
       this.userName = userName;
       this.userPassword = userPassword;
       this.email = email;
       this.phone = phone;
       this.vendors = vendors;
       this.branches = branches;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="user_id", unique=true, nullable=false)
    public Integer getUserId() {
        return this.userId;
    }
    
    public void setUserId(Integer userId) {
        this.userId = userId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="role_id", nullable=false)
    public UserRole getUserRole() {
        return this.userRole;
    }
    
    public void setUserRole(UserRole userRole) {
        this.userRole = userRole;
    }

    
    @Column(name="first_name", nullable=false, length=45)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    
    @Column(name="last_name", nullable=false, length=45)
    public String getLastName() {
        return this.lastName;
    }
    
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="reg_date", nullable=false, length=10)
    public Date getRegDate() {
        return this.regDate;
    }
    
    public void setRegDate(Date regDate) {
        this.regDate = regDate;
    }

    
    @Column(name="user_name", unique=true, length=45)
    public String getUserName() {
        return this.userName;
    }
    
    public void setUserName(String userName) {
        this.userName = userName;
    }

    
    @Column(name="user_password", nullable=false, length=45)
    public String getUserPassword() {
        return this.userPassword;
    }
    
    public void setUserPassword(String userPassword) {
        this.userPassword = userPassword;
    }

    
    @Column(name="email", nullable=false, length=45)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="phone", nullable=false)
    public int getPhone() {
        return this.phone;
    }
    
    public void setPhone(int phone) {
        this.phone = phone;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<Vendor> getVendors() {
        return this.vendors;
    }
    
    public void setVendors(Set<Vendor> vendors) {
        this.vendors = vendors;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="user")
    public Set<Branch> getBranches() {
        return this.branches;
    }
    
    public void setBranches(Set<Branch> branches) {
        this.branches = branches;
    }




}


